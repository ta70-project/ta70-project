name: Publish installers
on:
  push:
    branches:
      - master
jobs:
  # publish_window_installer:
  #   name: Publish Windows installer
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16.15.0'

  #     - name: Build
  #       run: |
  #         npm install
  #         npm run postinstall
  #         npm run publish:windows
    
  #     - name: Scp
  #       uses: garygrossgarten/github-action-scp@v0.7.3
  #       with:
  #         local: dist/executables/open-days-with-alexa-latest.exe
  #         remote: .
  #         host: ${{ secrets.SSH_HOST }}
  #         port: ${{ secrets.SSH_PORT }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}

  # publish_macos_installer:
  #   name: Publish macOS installer
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16.15.0'

  #     - name: Build
  #       run: |
  #         npm install
  #         npm run postinstall
  #         npm run publish:macos

  #     - name: Scp
  #       uses: garygrossgarten/github-action-scp@v0.7.3
  #       with:
  #         local: dist/executables/open-days-with-alexa-latest.dmg
  #         remote: .
  #         host: ${{ secrets.SSH_HOST }}
  #         port: ${{ secrets.SSH_PORT }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}

  publish_linux_installer:
    name: Publish Linux installer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'

      - name: Build
        run: |
          npm install
          npm run postinstall
          npm run publish:linux

      - name: Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: latest

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/executables/open-days-with-alexa-latest.AppImage
          asset_name: open-days-with-alexa-latest.AppImage
          asset_content_type: application/appimage